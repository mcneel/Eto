<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:r="clr-namespace:Eto.Wpf.CustomControls.TreeGridView"
    xmlns:efc="clr-namespace:Eto.Wpf.Forms.Controls"
    xmlns:e="clr-namespace:Eto.Wpf"
    xmlns:s="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Eto.Wpf;Component/themes/wpftoolkit/ButtonSpinner.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type r:TreeToggleButton}">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.Width" Value="16" />
        <Setter Property="FrameworkElement.Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type r:TreeToggleButton}">
                    <Border Height="16" Width="16" Background="#00FFFFFF" Padding="5,5,5,5">
                        <Path Fill="#00FFFFFF" Name="ExpandPath" Stroke="#FF989898">
                            <Path.Data>
                                <PathGeometry Figures="M0,0L0,6L6,0z" />
                            </Path.Data>
                            <Path.RenderTransform>
                                <RotateTransform CenterX="3" Angle="135" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                <Setter.Value>
                                    <SolidColorBrush>#FF1BBBFA</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked">
                            <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform CenterX="3" Angle="180" CenterY="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                <Setter.Value>
                                    <SolidColorBrush>#FF595959</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                <Setter.Value>
                                    <SolidColorBrush>#FF262626</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type efc:EtoComboBox}">
        <Style.Setters>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
	
	<Style TargetType="efc:EtoButton">
		<Setter Property="Padding" Value="2" />
	</Style>

    <Style TargetType="efc:EtoToggleButton">
		<Setter Property="Padding" Value="2" />
        <Style.Resources>
            <Style TargetType="Border">
                <Style.Triggers>
                    <MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding Path=(e:WpfProperties.EtoStyle), RelativeSource={RelativeSource AncestorType={x:Type efc:EtoToggleButton}}}" Value="SegmentedButton" />
							<Condition Binding="{Binding Path=(e:WpfProperties.EtoModifier), RelativeSource={RelativeSource AncestorType={x:Type efc:EtoToggleButton}}}" Value="first" />
						</MultiDataTrigger.Conditions>
                        <Setter Property="CornerRadius" Value="4,0,0,4" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding Path=(e:WpfProperties.EtoStyle), RelativeSource={RelativeSource AncestorType={x:Type efc:EtoToggleButton}}}" Value="SegmentedButton" />
							<Condition Binding="{Binding Path=(e:WpfProperties.EtoModifier), RelativeSource={RelativeSource AncestorType={x:Type efc:EtoToggleButton}}}" Value="last" />
						</MultiDataTrigger.Conditions>
                        <Setter Property="CornerRadius" Value="0,4,4,0" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="e:WpfProperties.EtoStyle" Value="SegmentedButton">
                <Setter Property="BorderThickness" Value=".5,1" />
                <Setter Property="Padding" Value="4,2" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="e:WpfProperties.EtoStyle" Value="SegmentedButton"/>
                    <Condition Property="e:WpfProperties.EtoModifier" Value="first"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value="1,1,.5,1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="e:WpfProperties.EtoStyle" Value="SegmentedButton"/>
                    <Condition Property="e:WpfProperties.EtoModifier" Value="last"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" Value=".5,1,1,1" />
            </MultiTrigger>

        </Style.Triggers>
    </Style>


</ResourceDictionary>